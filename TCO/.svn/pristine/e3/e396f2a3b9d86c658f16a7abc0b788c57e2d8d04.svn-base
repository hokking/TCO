package kr.or.tco.sttst.controller;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;

import kr.or.tco.sls.vo.SlsVO;
import kr.or.tco.sttst.service.SttstService;


/**
 * 통계 컨트롤러
 * @author PC-25 김영훈
 * 통계를 관리하는 최초의 컨트롤러 창
 */
@RequestMapping("/sttst")
@Controller
public class SttstController {
	
	private static final Logger logger=
			LoggerFactory.getLogger(SttstController.class);
	
	@Autowired SttstService sttstService;
	
	
	/**
	 * 연간 입출 현황 출력창
	 * @return sttst/annualStatus을 출력한다.
	 */
	@RequestMapping(value = "/annual", method = RequestMethod.GET)
	public String annualStatus() {
		return "sttst/annualStatus";
	}
	
	
	/**
	 * 통계 - 일일 매출 현황
	 * 일일 매출 현황을 차트로 출력
	 * @return  sttst/dailyProfit에서 출력한다.
	 */
	@RequestMapping(value="/daily",method = RequestMethod.GET)
	public String dailyProfit(Model model) {
		
		return "sttst/dailyProfit";
	}
	
	
	/**
	 * 일일 매출 현황 차트
	 * sttst/daily Post타입
	 * ajax와 연결되어 chart.js출력 
	 * @param void
	 */
	@ResponseBody
	@RequestMapping(value="/daily", method = RequestMethod.POST)
	public String dailyPost(Model model) {
		
	List<SlsVO>list = sttstService.getDailyIncome();
	//gson객체 생성
		Gson gson = new Gson();
		JsonArray jArray = new JsonArray();
	//date타입을 string타입으로 바꾸기
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		
		Iterator<SlsVO> it = list.iterator();
		while(it.hasNext()) {
			SlsVO slsVO = it.next();
			JsonObject object = new JsonObject();
			int sale = slsVO.getSlsAmt();
			
			Date dt = slsVO.getSlsDt();
			String date =  df.format(dt);
			
			object.addProperty("sale", sale);
			object.addProperty("date", date);
			jArray.add(object);
		}
		
		String json = gson.toJson(jArray);
		logger.info("json변환: "+json);
		
		return json;
		
	}
	
	
	

	/**
	 * 통계 - 월별 매출현황
	 * @return 월별 매출현황출력
	 */
	@RequestMapping("/monthly")
	public String monthlyProfit() {
		return "sttst/monthlyProfit";
	}
	
	
	
	

	/**
	 * 통계 - 매출이익화면
	 * @return 매출이익 화면 출력
	 */
	@RequestMapping(value="/slsprofit",method = RequestMethod.GET)
	public String slsProfit() {
		return "sttst/slsprofit";
	}
	
	
	
}
